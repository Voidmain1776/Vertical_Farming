{"ast":null,"code":"var _class;\nimport * as Highcharts from 'highcharts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"highcharts-angular\";\nexport class LineChartComponent {\n  constructor() {\n    this.Highcharts = Highcharts;\n    this.chartOptions = {\n      title: {\n        text: 'Live Data Line Chart'\n      },\n      xAxis: {\n        type: 'datetime'\n      },\n      series: [{\n        type: \"line\",\n        name: 'Live Data',\n        data: []\n      }]\n    };\n  }\n  ngOnInit() {\n    // Simulate live data update every second\n    setInterval(() => {\n      const timestamp = new Date().getTime();\n      const value = Math.random() * 100;\n      const chart = this.Highcharts.charts[0]; // Get the chart reference\n      if (chart) {\n        chart.series[0].addPoint([timestamp, value], true, true);\n      }\n    }, 1000);\n  }\n}\n_class = LineChartComponent;\n_class.ɵfac = function LineChartComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-line-chart\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"chart-container\"], [2, \"width\", \"100%\", \"height\", \"400px\", \"display\", \"block\", 3, \"Highcharts\", \"options\"]],\n  template: function LineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"highcharts-chart\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"Highcharts\", ctx.Highcharts)(\"options\", ctx.chartOptions);\n    }\n  },\n  dependencies: [i1.HighchartsChartComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Highcharts","LineChartComponent","constructor","chartOptions","title","text","xAxis","type","series","name","data","ngOnInit","setInterval","timestamp","Date","getTime","value","Math","random","chart","charts","addPoint","selectors","decls","vars","consts","template","LineChartComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/home/diot/frontend/farm/src/app/line-chart/line-chart.component.ts","/home/diot/frontend/farm/src/app/line-chart/line-chart.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport { Options } from 'highcharts';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css'],\n})\nexport class LineChartComponent implements OnInit {\n  Highcharts: typeof Highcharts = Highcharts;\n  chartOptions: Options = {\n    title: {\n      text: 'Live Data Line Chart',\n    },\n    xAxis: {\n      type: 'datetime',\n    },\n    series: [\n      {\n        type:\"line\",\n        name: 'Live Data',\n        data: []\n      }\n    ],\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // Simulate live data update every second\n    setInterval(() => {\n      const timestamp = new Date().getTime();\n      const value = Math.random() * 100;\n      const chart = this.Highcharts.charts[0]; // Get the chart reference\n      if (chart) {\n        chart.series[0].addPoint([timestamp, value], true, true);\n      }\n    }, 1000);\n  }\n}\n","<div class=\"chart-container\">\n    <highcharts-chart\n      [Highcharts]=\"Highcharts\"\n      [options]=\"chartOptions\"\n      style=\"width: 100%; height: 400px; display: block;\" >\n    </highcharts-chart>\n  </div>\n  "],"mappings":";AACA,OAAO,KAAKA,UAAU,MAAM,YAAY;;;AAQxC,OAAM,MAAOC,kBAAkB;EAkB7BC,YAAA;IAjBA,KAAAF,UAAU,GAAsBA,UAAU;IAC1C,KAAAG,YAAY,GAAY;MACtBC,KAAK,EAAE;QACLC,IAAI,EAAE;OACP;MACDC,KAAK,EAAE;QACLC,IAAI,EAAE;OACP;MACDC,MAAM,EAAE,CACN;QACED,IAAI,EAAC,MAAM;QACXE,IAAI,EAAE,WAAW;QACjBC,IAAI,EAAE;OACP;KAEJ;EAEc;EAEfC,QAAQA,CAAA;IACN;IACAC,WAAW,CAAC,MAAK;MACf,MAAMC,SAAS,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;MACtC,MAAMC,KAAK,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG;MACjC,MAAMC,KAAK,GAAG,IAAI,CAACnB,UAAU,CAACoB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,IAAID,KAAK,EAAE;QACTA,KAAK,CAACX,MAAM,CAAC,CAAC,CAAC,CAACa,QAAQ,CAAC,CAACR,SAAS,EAAEG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;IAE5D,CAAC,EAAE,IAAI,CAAC;EACV;;SA9BWf,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/BE,EAAA,CAAAC,cAAA,aAA6B;MACzBD,EAAA,CAAAE,SAAA,0BAImB;MACrBF,EAAA,CAAAG,YAAA,EAAM;;;MAJFH,EAAA,CAAAI,SAAA,GAAyB;MAAzBJ,EAAA,CAAAK,UAAA,eAAAN,GAAA,CAAA7B,UAAA,CAAyB,YAAA6B,GAAA,CAAA1B,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}